/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        if (!root) {
            return {};
        }

        vector<int> preorder;
        preorder.reserve(100);
        stack<TreeNode*> work;
        work.push(root);
        while (!work.empty()) {
            TreeNode* node = work.top();
            work.pop();
            preorder.push_back(node->val);

            if (node->right) {
                work.push(node->right);
            }

            if (node->left) {
                work.push(node->left);
            }
        }
        return preorder;
    }
};
